worker()
list()
source('~/GitHub/cs-x-programming/week5/week5_tdm.R')
setwd("~/GitHub/cs-x-programming/week5")
setwd("~/")
setwd("~/GitHub/cs-x-programming/week5")
source('~/GitHub/cs-x-programming/week5/week5_tdm.R')
Allfreq
docnum
docs
page
mixseg
Alltoken
Allfreq
tokem
token
NewDataFrame
mixseg
freqFrame
DF
source('~/GitHub/cs-x-programming/week5/week5_tfidf.R')
tdm$nrow
as.character(id)
data
getdoc
library(bitops)
library(httr)
library(RCurl)
library(XML)
library(tm)
library(NLP)
library(tmcn)
library(jiebaRD)
library(jiebaR)
rm(list = ls())
library(rvest)
from <- 3870 # 2018-03-25
to   <- 3874 # 2018-03-31
prefix = "https://www.ptt.cc/bbs/NBA/index"
data <- list()
for( id in c(from:to) )
{
url  <- paste0( prefix, as.character(id), ".html" )
html <- htmlParse( GET(url) )
url.list <- xpathSApply( html, "//div[@class='title']/a[@href]", xmlAttrs )
data <- rbind( data, as.matrix(paste('https://www.ptt.cc', url.list, sep='')) )
res <- read_html(url)
raw.titles <- res %>% html_nodes("div.title")
nba.article.title <- raw.titles %>% html_text()
}
#I learned the difference between paste() and paste0(), the former can give order to seperate different things in (), and the latter will connect things in () without any blankspace
data <- unlist(data)
#take a loot at the data I successfully got
head(data)
tail(data)
data
nba.article.title
#Fail
#I want to get the titles of all the articles, but the result is only the last twenty titles.
library(dplyr)
getdoc <- function(url)
html <- htmlParse( getURL(url) )
doc  <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
doc <- unlist(doc)
doc
library(bitops)
library(httr)
library(RCurl)
library(XML)
library(tm)
library(NLP)
library(tmcn)
library(jiebaRD)
library(jiebaR)
rm(list = ls())
library(rvest)
from <- 3870 # 2018-03-25
to   <- 3874 # 2018-03-31
prefix = "https://www.ptt.cc/bbs/NBA/index"
data <- list()
for( id in c(from:to) )
{
url  <- paste0( prefix, as.character(id), ".html" )
html <- htmlParse( GET(url) )
url.list <- xpathSApply( html, "//div[@class='title']/a[@href]", xmlAttrs )
data <- rbind( data, as.matrix(paste('https://www.ptt.cc', url.list, sep='')) )
res <- read_html(url)
raw.titles <- res %>% html_nodes("div.title")
nba.article.title <- raw.titles %>% html_text()
}
#I learned the difference between paste() and paste0(), the former can give order to seperate different things in (), and the latter will connect things in () without any blankspace
data <- unlist(data)
#take a loot at the data I successfully got
head(data)
tail(data)
data
nba.article.title
#Fail
#I want to get the titles of all the articles, but the result is only the last twenty titles.
library(dplyr)
getdoc <- function(url)
{
html <- htmlParse( getURL(url) )
doc  <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
}
sapply(data, getdoc)
#doc  <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
}
library(dplyr)
getdoc <- function(url)
{
html <- htmlParse( getURL(url) )
#doc  <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
}
sapply(data, getdoc)
library(dplyr)
getdoc <- function(url)
{
html <- htmlParse( getURL(url) )
doc111  <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
}
sapply(data, getdoc)
#Success
#Got all the content,
library(dplyr)
getdoc <- function(url)
{
html <- htmlParse( getURL(url) )
doc111  <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
}
sapply(data, getdoc)
#Success
#Got
library(dplyr)
getdoc111 <- function(url)
{
html <- htmlParse( getURL(url) )
doc111  <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
}
sapply(data, getdoc)
#Success
library(dplyr)
getdoc <- function(url)
{
html <- htmlParse( getURL(url) )
doc  <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
}
sapply(data, getdoc)
