import warnings
warnings.simplefilter('ignore')
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn import tree
from sklearn.decomposition import PCA
from sklearn import preprocessing
import tensorflow as tf
install.packages("keras")
library(keras)
install_keras()
install_keras()
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
install.packages("Anacoda")
install.packages("AnaCoDa")
install.
install.packages("Anaconda")
install_keras()
install.packages(installr)
install.packages("installr")
library(installr)
updateR()
updater()
install.packages(installr)
install.packages("installr")
install.packages("installr")
library(installr)
updateR()
installr()
updater()
library(installr)
updater()
updater()
library(installr)
updater()
update.formula()
update
install.packages("installr")
update
update(r)
install.packages("Anaconda")
library(keras)
install_keras()
install.packages("keras")
library(keras)
install_keras()
library(keras)
install_keras()
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
# reshape
x_train <- array_reshape(x_train, c(nrow(x_train), 784))
x_test <- array_reshape(x_test, c(nrow(x_test), 784))
# rescale
x_train <- x_train / 255
x_test <- x_test / 255
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
summary(mode1)
Tools -> Global Option -> General
Tools -> Global Option -> General
library(NLP)
library(tm)
library(tmcn)
library(stringr)
library(jiebaRD)
library(jiebaR)
text = read.table(file = "散文.txt",quote = "", encoding="utf8")
library(NLP)
library(tm)
library(tmcn)
library(stringr)
library(jiebaRD)
library(jiebaR)
text = read.table(file = "散文.txt",quote = "", encoding="utf8")
setwd("~/GitHub/cs-x-programming/final project")
text = read.table(file = "散文.txt",quote = "", encoding="utf8")
text = read.table(file = "散文.txt",quote = "")
text = read.table(file = "散文.txt")
text = read.table(file = "散文.txt", fileEncoding="latin1")
View(text)
text = read.table(file = "散文.txt", fileEncoding="latin1")
text = read.table(file = "散文.txt")
text = text$V1
text = read.table(file = "散文.txt")
text = read.table(file = "散文.txt", encoding="big5")
text = read.table(file = "散文.txt", encoding="big5")
